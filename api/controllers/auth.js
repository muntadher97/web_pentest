import {db} from "../db.js"
import jwt from "jsonwebtoken"
//import bcrypt from "bcryptjs"

export const register=(req,res)=>{
    //Check existing user
   
    const q="SELECT * FROM USERS WHERE user=? OR email=?"
    db.query(q,[req.body.username,req.body.email],(err,data)=>{
        if(err) return res.json(err);
        if(data.length) return res.status(409).json("user already exsists!");
        // ADD hash to password and create new user
        ////const salt = bcrypt.genSaltSync(10);
        ////const hash = bcrypt.hashSync(req.body.password, salt);
        
        const q="INSERT INTO users(`user`,`email`,`password`) VALUES (?)"
        const values=[
            req.body.username,
            req.body.email,
            req.body.password
        ]
        
        db.query(q,[values],(err,data)=>{
            
            if(err) return res.json(err);
            return res.status(200).json("User has been created.");
        });

        

    });
};

export const login=(req,res)=>{
    //check User
    const q="SELECT * FROM users WHERE user=?"
    db.query(q,[req.body.username],(err,data)=>{   
        if(err) return res.json(err);      
        if (data.length === 0) return res.status(400).json("user not found")

        const q="SELECT * FROM users WHERE user=? AND password=?"
        db.query(q,[req.body.username,req.body.password],(err,data)=>{
            if (err) return res.json(err);
            if(data.length === 0) return res.status(400).json("wrong username or password");
            //console.log(data)
            ////use token
            const token=jwt.sign({id:data[0].id},"jwtkey")
            res.cookie("access_token",token,{
                httpOnly:true
            }).status(200).json(data[0])

            ////normal with ou token
           // return res.status(200).json("Login Done");
        })
    })
};

export const logout=(req,res)=>{
    res.clearCookie("access_token",{
        sameSite:"none",
        secure:true
    }).status(200).json("User has been logged out.")
};